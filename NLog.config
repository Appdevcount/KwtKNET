<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log" throwConfigExceptions="true">

   <!--internalLogIncludeTimestamp="true"  >-->

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--Custom fields as Nlog variables can be used in Database or anyother form of logging
  Variables can be changed/accessed in the code
  The values can be referenced in NLog.config
  https://stackoverflow.com/questions/12424301/how-do-i-log-a-custom-field-in-nlog-to-database-->

  <variable name="App"  value="myvalue" />
  <variable name="ReqLog"  value="myvalue"/>
  <variable name="RespLog"  value="myvalue"/>
  <variable name="Other"  value="myvalue"/>
  <variable name="ErrorAt"  value="myvalue"/>
  <variable name="ExceptionDetails"  value="myvalue"/>
  <variable name="AdditionalInfo"  value="myvalue"/>
  <variable name="TokenId"  value="0"/>
  <variable name="ReqTime"  value="myvalue"/>
  <variable name="RespTime"  value="myvalue"/>
  <variable name="CustomLogger"  value="myvalue"/>
 
  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->

    <!-- file target -->
    <target name="NFile" xsi:type="File"
            fileName="C:\Temp\Nlogger-${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${var:Customlogger}|${message}"
            archiveEvery="Day"
             archiveNumbering="Rolling"
             maxArchiveFiles="30"
             concurrentWrites="true"
             keepFileOpen="false"
             encoding="iso-8859-2" >
      <!--Sample layout for Compound JSON structured log-->
      <layout xsi:type="CompoundLayout">
        <layout xsi:type="SimpleLayout" text="${longdate}  ==> : " />
        <layout xsi:type="JsonLayout"  >
          <attribute name="time" layout="${longdate}" />
          <attribute name="level" layout="${level}" />
          <attribute name="CustomLogger" layout="${var:Customlogger}" />
          <attribute name="message" layout="${message}" />
          <attribute name="ReqResp" encode="false" >
            <layout xsi:type="JsonLayout"  includeAllProperties="true"  maxRecursionLimit="10"/>
          </attribute>
        </layout>
      </layout>

    </target>
    <!-- database target -->

    <target name="database"
            xsi:type="Database"
            connectionStringName="conStr"
             commandType="StoredProcedure"
            commandText="[dbo].[LogActivity]">
      <parameter name="@TokenId" layout="${var:TokenId}" />
      <parameter name="@ErrLevel" layout="${level}" />
      <parameter name="@Callsite" layout="${callsite}" />
      <parameter name="@ExceptionType" layout="${exception:format=type}" />
      <parameter name="@StackTrace" layout="${exception:format=stackTrace}" />
      <parameter name="@InnerExceptionDetail"                        layout="${exception:format=:innerFormat=ShortType,Message,Method:MaxInnerExceptionLevel=1:InnerExceptionSeparator=}" />
      <parameter name="@ExceptionMessage"   layout="${exception:format=Message}"/>
      <parameter name="@ReqTime" layout="${var:ReqTime}" />
      <parameter name="@RespTime" layout="${var:RespTime}" />
      <parameter name="@ServerAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
            <parameter name="@RemoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
      <!-- <parameter name="@RemoteAddress" layout="${aspnet-request-ip}" /> -->
      <parameter name="@URL" layout="${aspnet-request:serverVariable=HTTP_URL}" />
<!-- <parameter name="@URL" layout="${aspnet-request-url:IncludeHost=false:IncludePort=false:IncludeQueryString=true}" /> -->

      <!--<parameter name="@Logger" layout="${logger}" />-->
      <parameter name="@Logger" layout="${var:Customlogger}" />

      <parameter name="@App"  layout="${var:App}" />
      <parameter name="@ReqLog"  layout="${var:ReqLog}"/>
      <parameter name="@RespLog"  layout="${var:RespLog}"/>
      <parameter name="@Other"  layout="${var:Other}"/>
      <parameter name="@ErrorAt"  layout="${var:ErrorAt}"/>
      <parameter name="@ExceptionDetails"  layout="${var:ExceptionDetails}"/>
      <parameter name="@AdditionalInfo"  layout="${var:AdditionalInfo}"/>
    </target>


    <!--EventLog target-->
    <target xsi:type="EventLog"
          name="eventlog"
          layout="${message}${newline}${exception:format=ToString}"
          machineName="."
          source="GCSKNET"
          category="TEST"
          eventId="1111"
          log="TESTEVENT"      >
      <!--Sample layout for Compound JSON structured log-->
      <layout xsi:type="CompoundLayout">
        <layout xsi:type="SimpleLayout" text="${longdate}  ==> : " />
        <layout xsi:type="JsonLayout"  >
          <attribute name="time" layout="${longdate}" />
          <attribute name="level" layout="${level}" />
          <attribute name="CustomLogger" layout="${var:Customlogger}" />
          <attribute name="message" layout="${message}" />
          <attribute name="ReqResp" encode="false" >
            <layout xsi:type="JsonLayout"  includeAllProperties="true"  maxRecursionLimit="10"/>
          </attribute>
        </layout>
      </layout>

    </target>
  </targets>


  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
    <!-- file logger -->
    <logger name="FileLogger"  minlevel="Trace" maxlevel="Fatal" writeTo="NFile" ></logger>
    <!-- database logger -->
    <logger  name="DatabaseLogger" levels="Trace,Info,Error,Warn,Fatal" writeTo="database"/>
    <!-- event logger -->
    <logger name="EventLogger"  minlevel="Trace" maxlevel="Fatal" writeTo="eventlog" ></logger>
  </rules>


</nlog>
